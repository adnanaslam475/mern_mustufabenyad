[{"C:\\Users\\CodingTier-ReactDev\\Desktop\\mernmustufabenyad\\client\\src\\index.js":"1","C:\\Users\\CodingTier-ReactDev\\Desktop\\mernmustufabenyad\\client\\src\\App.js":"2","C:\\Users\\CodingTier-ReactDev\\Desktop\\mernmustufabenyad\\client\\src\\reportWebVitals.js":"3","C:\\Users\\CodingTier-ReactDev\\Desktop\\mernmustufabenyad\\client\\src\\reducers\\index.js":"4","C:\\Users\\CodingTier-ReactDev\\Desktop\\mernmustufabenyad\\client\\src\\auth\\Login.js":"5","C:\\Users\\CodingTier-ReactDev\\Desktop\\mernmustufabenyad\\client\\src\\auth\\Register.js":"6","C:\\Users\\CodingTier-ReactDev\\Desktop\\mernmustufabenyad\\client\\src\\auth\\Help.js":"7","C:\\Users\\CodingTier-ReactDev\\Desktop\\mernmustufabenyad\\client\\src\\booking\\Home.js":"8","C:\\Users\\CodingTier-ReactDev\\Desktop\\mernmustufabenyad\\client\\src\\user\\Dashboard.js":"9","C:\\Users\\CodingTier-ReactDev\\Desktop\\mernmustufabenyad\\client\\src\\user\\DashboardSeller.js":"10","C:\\Users\\CodingTier-ReactDev\\Desktop\\mernmustufabenyad\\client\\src\\components\\TopNav.js":"11","C:\\Users\\CodingTier-ReactDev\\Desktop\\mernmustufabenyad\\client\\src\\components\\Payments.js":"12","C:\\Users\\CodingTier-ReactDev\\Desktop\\mernmustufabenyad\\client\\src\\stripe\\StripeCallback.js":"13","C:\\Users\\CodingTier-ReactDev\\Desktop\\mernmustufabenyad\\client\\src\\hotels\\NewHotel.js":"14","C:\\Users\\CodingTier-ReactDev\\Desktop\\mernmustufabenyad\\client\\src\\reducers\\auth.js":"15","C:\\Users\\CodingTier-ReactDev\\Desktop\\mernmustufabenyad\\client\\src\\components\\LoginForm.js":"16","C:\\Users\\CodingTier-ReactDev\\Desktop\\mernmustufabenyad\\client\\src\\components\\RegisterForm.js":"17","C:\\Users\\CodingTier-ReactDev\\Desktop\\mernmustufabenyad\\client\\src\\components\\DashboardNav.js":"18","C:\\Users\\CodingTier-ReactDev\\Desktop\\mernmustufabenyad\\client\\src\\actions\\auth.js":"19","C:\\Users\\CodingTier-ReactDev\\Desktop\\mernmustufabenyad\\client\\src\\actions\\stripe.js":"20","C:\\Users\\CodingTier-ReactDev\\Desktop\\mernmustufabenyad\\client\\src\\actions\\hotel.js":"21","C:\\Users\\CodingTier-ReactDev\\Desktop\\mernmustufabenyad\\client\\src\\components\\forms\\HotelCreateForm.js":"22"},{"size":990,"mtime":1627289709833,"results":"23","hashOfConfig":"24"},{"size":1321,"mtime":1627289709804,"results":"25","hashOfConfig":"24"},{"size":375,"mtime":1626166098304,"results":"26","hashOfConfig":"24"},{"size":178,"mtime":1626166098299,"results":"27","hashOfConfig":"24"},{"size":1687,"mtime":1627289709816,"results":"28","hashOfConfig":"24"},{"size":1661,"mtime":1627289709817,"results":"29","hashOfConfig":"24"},{"size":165,"mtime":1626166098273,"results":"30","hashOfConfig":"24"},{"size":3851,"mtime":1627291486311,"results":"31","hashOfConfig":"24"},{"size":1841,"mtime":1627290076127,"results":"32","hashOfConfig":"24"},{"size":2898,"mtime":1627289709835,"results":"33","hashOfConfig":"24"},{"size":1771,"mtime":1627289709823,"results":"34","hashOfConfig":"24"},{"size":1964,"mtime":1627289709822,"results":"35","hashOfConfig":"24"},{"size":1352,"mtime":1626166098306,"results":"36","hashOfConfig":"24"},{"size":3251,"mtime":1627289709830,"results":"37","hashOfConfig":"24"},{"size":468,"mtime":1626166098297,"results":"38","hashOfConfig":"24"},{"size":1115,"mtime":1626166098280,"results":"39","hashOfConfig":"24"},{"size":1323,"mtime":1626166098282,"results":"40","hashOfConfig":"24"},{"size":806,"mtime":1627289709821,"results":"41","hashOfConfig":"24"},{"size":498,"mtime":1627289709805,"results":"42","hashOfConfig":"24"},{"size":1016,"mtime":1627289709808,"results":"43","hashOfConfig":"24"},{"size":1260,"mtime":1627289709806,"results":"44","hashOfConfig":"24"},{"size":3117,"mtime":1627289823604,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9v19r3",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},"C:\\Users\\CodingTier-ReactDev\\Desktop\\mernmustufabenyad\\client\\src\\index.js",[],"C:\\Users\\CodingTier-ReactDev\\Desktop\\mernmustufabenyad\\client\\src\\App.js",[],"C:\\Users\\CodingTier-ReactDev\\Desktop\\mernmustufabenyad\\client\\src\\reportWebVitals.js",[],"C:\\Users\\CodingTier-ReactDev\\Desktop\\mernmustufabenyad\\client\\src\\reducers\\index.js",[],"C:\\Users\\CodingTier-ReactDev\\Desktop\\mernmustufabenyad\\client\\src\\auth\\Login.js",[],"C:\\Users\\CodingTier-ReactDev\\Desktop\\mernmustufabenyad\\client\\src\\auth\\Register.js",["100","101"],"import React, { useState } from 'react';\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport { useHistory } from 'react-router-dom'\r\nimport RegisterForm from \"../components/RegisterForm\";\r\nimport axios from \"axios\";\r\n\r\nconst Register = () => {\r\n  const history = useHistory();\r\n  const [input, setinput] = useState({\r\n    name: '',\r\n    email: '', password: ''\r\n  })\r\n  const [msg, setmsg] = useState('')\r\n\r\n\r\n  const inputhandler = e => {\r\n    setinput({\r\n      ...input,\r\n      [e.target.name || e.target.id]: e.target.value\r\n    })\r\n    setmsg('')\r\n  }\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const { name,\r\n        email,\r\n        password, } = input;\r\n        const res = await axios.post(`/api/register`, {\r\n        name,\r\n        email,\r\n        password,\r\n      });\r\n      console.log('res regster-->', res)\r\n      res.data.ok == false && setmsg(res.data.msg);\r\n      if (res.data.ok == true) {\r\n        history.push('/login')\r\n        toast.success(res.data.msg)\r\n      };\r\n    } catch (err) {\r\n      console.log('err--->', err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer />\r\n      <div className=\"container-fluid bg-primary p-5 text-center\">\r\n        <h1>Register</h1>\r\n      </div>\r\n\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6 offset-md-3\">\r\n            <RegisterForm\r\n              handleSubmit={handleSubmit}\r\n              input={input}\r\n              msg={msg}\r\n              inputhandler={inputhandler}\r\n            />\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Register;","C:\\Users\\CodingTier-ReactDev\\Desktop\\mernmustufabenyad\\client\\src\\auth\\Help.js",[],"C:\\Users\\CodingTier-ReactDev\\Desktop\\mernmustufabenyad\\client\\src\\booking\\Home.js",["102","103","104","105","106"],"import React, { useState, useEffect } from \"react\";\r\nimport { Button, DatePicker, Input } from 'antd';\r\n\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport { useSelector, } from \"react-redux\";\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\n\r\nconst Home = () => {\r\n  // const state = useSelector((state) => ({ ...state }));\r\n  const [input, setinput] = useState({\r\n    latitude: '', longitude: \"\",\r\n    city: '', checkIn: '', checkOut: '',\r\n    guests: ''\r\n  });\r\n\r\n  const [city, setcity] = useState('')\r\n  const [hotels, sethotels] = useState([])\r\n  const [cityId, setcityId] = useState('')\r\n  const [msg, setmsg] = useState('')\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    navigator.geolocation.getCurrentPosition(({ coords: { latitude, longitude } }) => {\r\n      setinput({\r\n        ...input,\r\n        latitude, longitude\r\n      })\r\n    })\r\n  }, [])\r\n\r\n\r\n  const handlechange = e => {\r\n    setmsg('')\r\n    setinput({\r\n      ...input,\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (input.latitude) {\r\n      axios.get(`https://engine.hotellook.com/api/v2/lookup.json?query=${input.latitude},${input.longitude}&lang=en&lookFor=city&limit=1&token=957018d5a69e4436c45764bad40fd29c`)\r\n        .then(res => {\r\n          setcity(res.data.results.locations[0].name)\r\n          setcityId(res.data.results.locations[0].id)\r\n        }).catch(err => {\r\n          setmsg('cannot get locations , network error')\r\n        })\r\n    }\r\n\r\n  }, [input.latitude])\r\n\r\n\r\n  useEffect(() => {\r\n    if (cityId.trim().length) {\r\n      console.log('yeh---->', input.latitude)\r\n      axios.get(`https://engine.hotellook.com/api/v2/static/hotels.json?locationId=${cityId}&token=957018d5a69e4436c45764bad40fd29c`)\r\n        .then(res => {\r\n          sethotels(res.data.hotels)\r\n        }).catch(err => {\r\n          console.log(err)\r\n        })\r\n    }\r\n  }, [cityId])\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"container-fluid h1 p-5 text-center\">\r\n      <h2>{city}</h2>\r\n      <DatePicker\r\n        placeholder=\"check in\"\r\n        className=\"form-control m-2\"\r\n        onChange={(date, dateString) => setinput({ ...input, checkIn: dateString })}\r\n        disabledDate={(current) =>\r\n          current && current.valueOf() < moment().subtract(1, \"days\")\r\n        }\r\n      /><DatePicker\r\n        placeholder=\"check out \"\r\n        className=\"form-control m-2\"\r\n        onChange={(date, dateString) => setinput({ ...input, checkOut: dateString })}\r\n        disabledDate={(current) =>\r\n          current && current.valueOf() < moment().subtract(1, \"days\")\r\n        }\r\n      />\r\n      <Input type='number' onChange={handlechange} required\r\n        value={input.guests}\r\n        placeholder='enter guest'\r\n      />\r\n      <button className=\"btn btn-outline-primary m-2\">Search</button>\r\n      <Grid container >{hotels.map((v, i) => {\r\n        return (<Grid item style={{\r\n          padding: '2% 0 2% 0',\r\n          marginBottom: '20px',\r\n        }}\r\n          md={4} xs={12} sm={6} xl={4} lg={4} key={i}>\r\n          <img src={v.photos[0]?.url || 'https://i.stack.imgur.com/y9DpT.jpg'}\r\n            style={{\r\n              minWidth: \"95%\",\r\n              maxWidth: \"95%\",\r\n              maxHeight: \"70%\",\r\n              minHeight: \"70%\",\r\n              marginBottom:'10px'\r\n            }}\r\n            alt='i' />\r\n          <Typography>Name : {v.name.en}</Typography>\r\n          <Typography>check in time : {v.checkIn || 'not available'}</Typography>\r\n          <Typography>check out time : {v.checkOut || 'not available'}</Typography>\r\n          <Button  style={{\r\n            backgroundColor: 'blue',\r\n            color: 'white',\r\n            borderRadius: '5px',\r\n            width:'50%'\r\n          }} color='blue'\r\n            onClick={() => ''} >Book</Button>\r\n        </Grid>)\r\n      })}</Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;","C:\\Users\\CodingTier-ReactDev\\Desktop\\mernmustufabenyad\\client\\src\\user\\Dashboard.js",["107"],"import React, { useEffect, useState } from \"react\";\r\n// import { useDispatch } from \"react-redux\";\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport DashboardNav from \"../components/DashboardNav\"\r\n\r\nconst Dashboard = () => {\r\n    const [hotels, setHotels] = useState(null);\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('auth')\r\n        const t = JSON.parse(token)\r\n        if (!t?.token) {\r\n            history.push('/login')\r\n        }\r\n        axios.get(`/api/hotels`, {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(res => {\r\n            setHotels(res.data)\r\n        }).catch(e => {\r\n            console.log(e)\r\n        })\r\n    }, [])\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container-fluid bg-primary p-5\">\r\n                <h1>Dashboard</h1>\r\n            </div>\r\n            <div className=\"container-fluid p-4\">\r\n                <DashboardNav />\r\n            </div>\r\n\r\n            <div className=\"container-fluid\">\r\n\r\n                <p>Show all bookings and button to browse hotels</p>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-10\">\r\n                        <h2>Your Bookings</h2>\r\n                    </div>\r\n                    <div className=\"col-md-2\">\r\n                        <Link to=\"/hotels/new\" className=\"bnt bnt-primary\">\r\n                            <button className=\"btn btn-primary mb-3\">Add Listing</button>\r\n                        </Link>\r\n                    </div>\r\n                    {hotels?.map((v, i) => <div key={i}>\r\n                        <ul>\r\n\r\n                        </ul> </div>)}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Dashboard;",["108","109"],"C:\\Users\\CodingTier-ReactDev\\Desktop\\mernmustufabenyad\\client\\src\\user\\DashboardSeller.js",["110"],"\r\nimport React, { useState,useEffect } from \"react\";\r\nimport DashboardNav from \"../components/DashboardNav\";\r\nimport { Link,useHistory } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { HomeOutlined } from \"@ant-design/icons\";\r\nimport { createConnectAccount } from \"../actions/stripe\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n\r\nconst DashboardSeller = () => {\r\n  const { auth } = useSelector((state) => ({ ...state }));\r\n  const [loading, setLoading] = useState(true);\r\n  const history = useHistory()\r\n\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('auth')\r\n    const t = JSON.parse(token)\r\n    if (!t?.token) {\r\n      history.push('/login')\r\n    }\r\n\r\n  }, [])\r\n  const handleClick = async () => {\r\n    setLoading(true);\r\n    try {\r\n      let res = await createConnectAccount(auth.token);\r\n      console.log(res); // get login link\r\n      window.location.href = res.data;\r\n    } catch (err) {\r\n      console.log(err);\r\n      toast.error(\"Stripe connect failed, Try again.\");\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const connected = () => (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-10\">\r\n          <h2>Your Hotels</h2>\r\n        </div>\r\n        <div className=\"col-md-2\">\r\n          <Link to=\"/hotels/new\" className=\"btn btn-primary\">\r\n            + Add New\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const notConnected = () => (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 offset-md-3 text-center\">\r\n          <div className=\"p-5 pointer\">\r\n            <HomeOutlined className=\"h1\" />\r\n            <h4>Setup payouts to post hotel rooms</h4>\r\n            <p className=\"lead\">\r\n              MERN partners with stripe to transfer earnings to your bank\r\n              account\r\n            </p>\r\n            <button\r\n              disabled={loading}\r\n              onClick={handleClick}\r\n              className=\"btn btn-primary mb-3\"\r\n            >\r\n              {loading ? \"Processing...\" : \"Setup Payouts\"}\r\n            </button>\r\n            <p className=\"text-muted\">\r\n              <small>\r\n                You'll be redirected to Stripe to complete the onboarding\r\n                process.\r\n              </small>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container-fluid bg-primary p-5\">\r\n        <h1>Dashboard</h1>\r\n      </div>\r\n\r\n      <div className=\"container-fluid p-4\">\r\n        <DashboardNav />\r\n      </div>\r\n\r\n      {auth &&\r\n        auth.user &&\r\n        auth.user.stripe_seller &&\r\n        auth.user.stripe_seller.charges_enabled\r\n        ? connected()\r\n        : notConnected()}\r\n\r\n      {/* <pre>{JSON.stringify(auth, null, 4)}</pre> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DashboardSeller;","C:\\Users\\CodingTier-ReactDev\\Desktop\\mernmustufabenyad\\client\\src\\components\\TopNav.js",["111","112","113"],"import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { token } from 'morgan';\r\n\r\n\r\nconst TopNav = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  let [tokenlocal, settokenlocal] = useState(null)\r\n  const user = useSelector(s => s);\r\n  const [token, settoken] = useState('')\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('auth')\r\n    const t = JSON.parse(token)\r\n    settokenlocal(t?.token || user.token)\r\n  }, [user])\r\n\r\n\r\n\r\n  const logout = () => {\r\n    localStorage.clear();\r\n    settokenlocal(null)\r\n    dispatch({\r\n      type: \"LOGOUT\",\r\n      payload: null,\r\n    });\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  return (\r\n\r\n    <div className=\"nav bg-light d-flex justify-content-between\">\r\n      <Link className=\"nav-link\" to=\"/\">\r\n        Home\r\n      </Link>\r\n\r\n      <div className=\"nav bg-light d-flex justify-content-between\">\r\n        {tokenlocal && <Link className=\"nav-link\" to=\"/dashboard\">\r\n          Dashboard\r\n        </Link>}\r\n        <div className=\"nav bg-light d-flex justify-content-between\">\r\n          {!tokenlocal ? <div style={{ display: 'flex' }}>\r\n            <Link className=\"nav-link\" to=\"/login\">\r\n              Login\r\n            </Link>\r\n            <Link className=\"nav-link\" to=\"/register\">\r\n              Register\r\n            </Link>\r\n          </div> :\r\n            <Link className=\"nav-link\" onClick={logout} to=\"/login\">\r\n              Logout\r\n            </Link>}\r\n          <Link className=\"nav-link\" to=\"/help\">\r\n            Help\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default TopNav;","C:\\Users\\CodingTier-ReactDev\\Desktop\\mernmustufabenyad\\client\\src\\components\\Payments.js",[],"C:\\Users\\CodingTier-ReactDev\\Desktop\\mernmustufabenyad\\client\\src\\stripe\\StripeCallback.js",["114"],"import React from 'react';\r\n\r\nimport { LoadingOutlined } from \"@ant-design/icons\"\r\nimport { useEffect } from \"react\"\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getAccountStatus } from \"../actions/stripe\"\r\nimport { updateUserInLocalStorage } from \"../actions/auth\"\r\n\r\nconst StripeCallback = ({ history }) => {\r\n    const { auth } = useSelector((state) => ({ ...state }));\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (auth && auth.token) accountStatus()\r\n    }, [auth]);\r\n\r\n    const accountStatus = async () => {\r\n        try {\r\n            const res = await getAccountStatus(auth.token)\r\n            // console.log(\"USER ACCOUT STATUS ON STRIPE CALLBACK\", res);\r\n            updateUserInLocalStorage(res.data, () => {\r\n                //updateuser in redux\r\n                dispatch({\r\n                    type: \"LOGGED_IN_USER\",\r\n                    payload: res.data,\r\n                })\r\n                // redirect user to dashboard\r\n                window.location.href = \"/dashboard/seller\";\r\n            });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"d-fex justify-content-center p-5\">\r\n            <LoadingOutlined className=\"display-1 p-5 text-danger\" />\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default StripeCallback;","C:\\Users\\CodingTier-ReactDev\\Desktop\\mernmustufabenyad\\client\\src\\hotels\\NewHotel.js",[],"C:\\Users\\CodingTier-ReactDev\\Desktop\\mernmustufabenyad\\client\\src\\reducers\\auth.js",["115"],"let userState;\r\n\r\nif (window.localStorage.getItem(\"auth\")) {\r\n  userState = JSON.parse(window.localStorage.getItem(\"auth\"));\r\n} else {\r\n  userState = null; // {}\r\n}\r\n\r\nexport const authReducer = (\r\n  state = { name: \"\", role: \"\" },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"LOGGED_IN_USER\":\r\n      // console.log()\r\n      return { ...state, ...action.payload };\r\n    case \"LOGOUT\":\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};","C:\\Users\\CodingTier-ReactDev\\Desktop\\mernmustufabenyad\\client\\src\\components\\LoginForm.js",[],"C:\\Users\\CodingTier-ReactDev\\Desktop\\mernmustufabenyad\\client\\src\\components\\RegisterForm.js",[],"C:\\Users\\CodingTier-ReactDev\\Desktop\\mernmustufabenyad\\client\\src\\components\\DashboardNav.js",["116","117","118","119"],"import React from \"react\";\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst DashboardNav = () => {\r\n  return (\r\n    <ul className=\"nav nav-tabs\">\r\n      <li className=\"nav-item\">\r\n        <Link\r\n          className={'nav-link ${active === \"/dashboard\" && \"active\"}'}\r\n          to=\"/payment\">\r\n          Payment\r\n        </Link>\r\n        <Link\r\n          className={'nav-link ${active === \"/dashboard\" && \"active\"}'}\r\n          to=\"/dashboard\">\r\n          Your Bookings\r\n        </Link>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <Link\r\n          className={'nav-link ${active === \"/dashboard/seller\" && \"active\"}'}\r\n          className={'nav-link'}\r\n          to=\"/dashboard/seller\">\r\n          Your Hotels\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default DashboardNav;","C:\\Users\\CodingTier-ReactDev\\Desktop\\mernmustufabenyad\\client\\src\\actions\\auth.js",[],"C:\\Users\\CodingTier-ReactDev\\Desktop\\mernmustufabenyad\\client\\src\\actions\\stripe.js",[],"C:\\Users\\CodingTier-ReactDev\\Desktop\\mernmustufabenyad\\client\\src\\actions\\hotel.js",[],"C:\\Users\\CodingTier-ReactDev\\Desktop\\mernmustufabenyad\\client\\src\\components\\forms\\HotelCreateForm.js",["120"],"import React from 'react';\r\nimport algoliasearch from 'algoliasearch/lite';\r\n\r\nimport { DatePicker } from \"antd\";\r\nimport { Select } from \"antd\";\r\nimport moment from \"moment\";\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n// const config = {\r\n//   appId: '08SSDUYVXB',\r\n//   apiKey: 'da119de21d0f54287575192fc8e4e70b',\r\n//   language: \"en\",\r\n//   countries: [\"us\"],\r\n// };\r\n\r\nconst HotelCreateForm = ({\r\n  values,\r\n  setValues,\r\n  handleChange,\r\n  handleImageChange,\r\n  handleSubmit,\r\n}) => {\r\n\r\n  const searchClient = algoliasearch(\r\n    'latency',\r\n    '6be0576ff61c053d5f9a3225e2a90f76'\r\n  );\r\n  const { title, content, price, } = values;\r\n\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className=\"form-group\">\r\n        <label className=\"btn btn-outline-secondary btn-block m-2 text-left\">\r\n          Image\r\n          <input\r\n            type=\"file\"\r\n            name=\"image\"\r\n            onChange={handleImageChange}\r\n            accept=\"image/*\"\r\n            hidden\r\n          />\r\n        </label>\r\n\r\n        <input\r\n          type=\"text\"\r\n          name=\"title\"\r\n          onChange={handleChange}\r\n          placeholder=\"Title\"\r\n          className=\"form-control m-2\"\r\n          value={title}\r\n        />\r\n        <textarea\r\n          name=\"content\"\r\n          onChange={handleChange}\r\n          placeholder=\"Content\"\r\n          className=\"form-control m-2\"\r\n          value={content}\r\n        />\r\n\r\n\r\n        <input\r\n          type=\"number\"\r\n          name=\"price\"\r\n          onChange={handleChange}\r\n          placeholder=\"Price\"\r\n          className=\"form-control m-2\"\r\n          value={price}\r\n        />\r\n\r\n        <Select\r\n          onChange={(value) => setValues({ ...values, bed: value })}\r\n          className=\"w-100 m-2\"\r\n          size=\"large\"\r\n          placeholder=\"Number of rooms\"\r\n        >\r\n          <Option key={1}>{1}</Option>\r\n          <Option key={2}>{2}</Option>\r\n          <Option key={3}>{3}</Option>\r\n          <Option key={4}>{4}</Option>\r\n          <Option key={5}>{5}</Option>\r\n          <Option key={6}>{6}</Option>            <Option key={7}>{7}</Option>\r\n          <Option key={8}>{8}</Option>\r\n          <Option key={9}>{9}</Option>\r\n          <Option key={10}>{10}</Option>\r\n          <Option key={11}>{11}</Option>\r\n          <Option key={12}>{12}</Option>\r\n        </Select>\r\n\r\n\r\n      </div>\r\n      <DatePicker\r\n        placeholder=\"From date\"\r\n        className=\"form-control m-2\"\r\n        onChange={(date, dateString) =>\r\n          setValues({ ...values, from: dateString })\r\n        }\r\n        disabledDate={(current) =>\r\n          current && current.valueOf() < moment().subtract(1, \"days\")\r\n        }\r\n      />\r\n      <DatePicker\r\n        placeholder=\"To date\"\r\n        className=\"form-control m-2\"\r\n        onChange={(date, dateString) =>\r\n          setValues({ ...values, to: dateString })\r\n        }\r\n        disabledDate={(current) =>\r\n          current && current.valueOf() < moment().subtract(1, \"days\")\r\n        }\r\n      />\r\n      <button className=\"btn btn-outline-primary m-2\">Save</button>\r\n\r\n    </form>\r\n  );\r\n\r\n};\r\n\r\nexport default HotelCreateForm;\r\n",{"ruleId":"121","severity":1,"message":"122","line":35,"column":19,"nodeType":"123","messageId":"124","endLine":35,"endColumn":21},{"ruleId":"121","severity":1,"message":"122","line":36,"column":23,"nodeType":"123","messageId":"124","endLine":36,"endColumn":25},{"ruleId":"125","severity":1,"message":"126","line":5,"column":10,"nodeType":"127","messageId":"128","endLine":5,"endColumn":21},{"ruleId":"125","severity":1,"message":"129","line":20,"column":10,"nodeType":"127","messageId":"128","endLine":20,"endColumn":13},{"ruleId":"130","severity":1,"message":"131","line":31,"column":6,"nodeType":"132","endLine":31,"endColumn":8,"suggestions":"133"},{"ruleId":"130","severity":1,"message":"134","line":53,"column":6,"nodeType":"132","endLine":53,"endColumn":22,"suggestions":"135"},{"ruleId":"130","severity":1,"message":"136","line":66,"column":6,"nodeType":"132","endLine":66,"endColumn":14,"suggestions":"137"},{"ruleId":"130","severity":1,"message":"138","line":26,"column":8,"nodeType":"132","endLine":26,"endColumn":10,"suggestions":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"130","severity":1,"message":"138","line":24,"column":6,"nodeType":"132","endLine":24,"endColumn":8,"suggestions":"144"},{"ruleId":"125","severity":1,"message":"145","line":5,"column":10,"nodeType":"127","messageId":"128","endLine":5,"endColumn":15},{"ruleId":"125","severity":1,"message":"146","line":13,"column":10,"nodeType":"127","messageId":"128","endLine":13,"endColumn":15},{"ruleId":"125","severity":1,"message":"147","line":13,"column":17,"nodeType":"127","messageId":"128","endLine":13,"endColumn":25},{"ruleId":"130","severity":1,"message":"148","line":15,"column":8,"nodeType":"132","endLine":15,"endColumn":14,"suggestions":"149"},{"ruleId":"125","severity":1,"message":"150","line":6,"column":3,"nodeType":"127","messageId":"128","endLine":6,"endColumn":12},{"ruleId":"151","severity":1,"message":"152","line":10,"column":22,"nodeType":"153","messageId":"154","endLine":10,"endColumn":71},{"ruleId":"151","severity":1,"message":"152","line":15,"column":22,"nodeType":"153","messageId":"154","endLine":15,"endColumn":71},{"ruleId":"151","severity":1,"message":"152","line":22,"column":22,"nodeType":"153","messageId":"154","endLine":22,"endColumn":78},{"ruleId":"155","severity":1,"message":"156","line":23,"column":11,"nodeType":"157","messageId":"158","endLine":23,"endColumn":33},{"ruleId":"125","severity":1,"message":"159","line":26,"column":9,"nodeType":"127","messageId":"128","endLine":26,"endColumn":21},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'useSelector' is defined but never used.","Identifier","unusedVar","'msg' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'input'. Either include it or remove the dependency array. You can also do a functional update 'setinput(i => ...)' if you only need 'input' in the 'setinput' call.","ArrayExpression",["160"],"React Hook useEffect has a missing dependency: 'input.longitude'. Either include it or remove the dependency array.",["161"],"React Hook useEffect has a missing dependency: 'input.latitude'. Either include it or remove the dependency array.",["162"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["163"],"no-native-reassign",["164"],"no-negated-in-lhs",["165"],["166"],"'token' is defined but never used.","'token' is assigned a value but never used.","'settoken' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'accountStatus'. Either include it or remove the dependency array.",["167"],"'userState' is assigned a value but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'searchClient' is assigned a value but never used.",{"desc":"168","fix":"169"},{"desc":"170","fix":"171"},{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},"no-global-assign","no-unsafe-negation",{"desc":"174","fix":"176"},{"desc":"177","fix":"178"},"Update the dependencies array to be: [input]",{"range":"179","text":"180"},"Update the dependencies array to be: [input.latitude, input.longitude]",{"range":"181","text":"182"},"Update the dependencies array to be: [cityId, input.latitude]",{"range":"183","text":"184"},"Update the dependencies array to be: [history]",{"range":"185","text":"186"},{"range":"187","text":"186"},"Update the dependencies array to be: [accountStatus, auth]",{"range":"188","text":"189"},[860,862],"[input]",[1475,1491],"[input.latitude, input.longitude]",[1875,1883],"[cityId, input.latitude]",[793,795],"[history]",[708,710],[514,520],"[accountStatus, auth]"]